'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _QueryBuilderOperation = require('./QueryBuilderOperation');

var _QueryBuilderOperation2 = _interopRequireDefault(_QueryBuilderOperation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DelegateOperation = function (_QueryBuilderOperatio) {
  (0, _inherits3.default)(DelegateOperation, _QueryBuilderOperatio);

  function DelegateOperation(name, opt) {
    (0, _classCallCheck3.default)(this, DelegateOperation);

    var _this = (0, _possibleConstructorReturn3.default)(this, _QueryBuilderOperatio.call(this, name, opt));

    _this.delegate = opt.delegate;
    _this.isWriteOperation = _this.delegate.isWriteOperation;
    return _this;
  }

  DelegateOperation.prototype.is = function is(OperationClass) {
    return _QueryBuilderOperatio.prototype.is.call(this, OperationClass) || this.delegate.is(OperationClass);
  };

  DelegateOperation.prototype.call = function call(builder, args) {
    return this.delegate.call(builder, args);
  };

  DelegateOperation.prototype.onBefore = function onBefore(builder, result) {
    return this.delegate.onBefore(builder, result);
  };

  DelegateOperation.prototype.hasOnBefore = function hasOnBefore() {
    return this.onBefore !== DelegateOperation.prototype.onBefore || this.delegate.hasOnBefore();
  };

  DelegateOperation.prototype.onBeforeInternal = function onBeforeInternal(builder, result) {
    return this.delegate.onBeforeInternal(builder, result);
  };

  DelegateOperation.prototype.hasOnBeforeInternal = function hasOnBeforeInternal() {
    return this.onBeforeInternal !== DelegateOperation.prototype.onBeforeInternal || this.delegate.hasOnBeforeInternal();
  };

  DelegateOperation.prototype.onBeforeBuild = function onBeforeBuild(builder) {
    return this.delegate.onBeforeBuild(builder);
  };

  DelegateOperation.prototype.hasOnBeforeBuild = function hasOnBeforeBuild() {
    return this.onBeforeBuild !== DelegateOperation.prototype.onBeforeBuild || this.delegate.hasOnBeforeBuild();
  };

  DelegateOperation.prototype.onBuild = function onBuild(knexBuilder, builder) {
    return this.delegate.onBuild(knexBuilder, builder);
  };

  DelegateOperation.prototype.hasOnBuild = function hasOnBuild() {
    return this.onBuild !== DelegateOperation.prototype.onBuild || this.delegate.hasOnBuild();
  };

  DelegateOperation.prototype.onRawResult = function onRawResult(builder, result) {
    return this.delegate.onRawResult(builder, result);
  };

  DelegateOperation.prototype.hasOnRawResult = function hasOnRawResult() {
    return this.onRawResult !== DelegateOperation.prototype.onRawResult || this.delegate.hasOnRawResult();
  };

  DelegateOperation.prototype.onAfterQuery = function onAfterQuery(builder, result) {
    return this.delegate.onAfterQuery(builder, result);
  };

  DelegateOperation.prototype.hasOnAfterQuery = function hasOnAfterQuery() {
    return this.onAfterQuery !== DelegateOperation.prototype.onAfterQuery || this.delegate.hasOnAfterQuery();
  };

  DelegateOperation.prototype.onAfterInternal = function onAfterInternal(builder, result) {
    return this.delegate.onAfterInternal(builder, result);
  };

  DelegateOperation.prototype.hasOnAfterInternal = function hasOnAfterInternal() {
    return this.onAfterInternal !== DelegateOperation.prototype.onAfterInternal || this.delegate.hasOnAfterInternal();
  };

  DelegateOperation.prototype.onAfter = function onAfter(builder, result) {
    return this.delegate.onAfter(builder, result);
  };

  DelegateOperation.prototype.hasOnAfter = function hasOnAfter() {
    return this.onAfter !== DelegateOperation.prototype.onAfter || this.delegate.hasOnAfter();
  };

  DelegateOperation.prototype.queryExecutor = function queryExecutor(builder) {
    return this.delegate.queryExecutor(builder);
  };

  DelegateOperation.prototype.hasQueryExecutor = function hasQueryExecutor() {
    return this.queryExecutor !== DelegateOperation.prototype.queryExecutor || this.delegate.hasQueryExecutor();
  };

  return DelegateOperation;
}(_QueryBuilderOperation2.default);

exports.default = DelegateOperation;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlbGVnYXRlT3BlcmF0aW9uLmpzIl0sIm5hbWVzIjpbIkRlbGVnYXRlT3BlcmF0aW9uIiwibmFtZSIsIm9wdCIsImRlbGVnYXRlIiwiaXNXcml0ZU9wZXJhdGlvbiIsImlzIiwiT3BlcmF0aW9uQ2xhc3MiLCJjYWxsIiwiYnVpbGRlciIsImFyZ3MiLCJvbkJlZm9yZSIsInJlc3VsdCIsImhhc09uQmVmb3JlIiwicHJvdG90eXBlIiwib25CZWZvcmVJbnRlcm5hbCIsImhhc09uQmVmb3JlSW50ZXJuYWwiLCJvbkJlZm9yZUJ1aWxkIiwiaGFzT25CZWZvcmVCdWlsZCIsIm9uQnVpbGQiLCJrbmV4QnVpbGRlciIsImhhc09uQnVpbGQiLCJvblJhd1Jlc3VsdCIsImhhc09uUmF3UmVzdWx0Iiwib25BZnRlclF1ZXJ5IiwiaGFzT25BZnRlclF1ZXJ5Iiwib25BZnRlckludGVybmFsIiwiaGFzT25BZnRlckludGVybmFsIiwib25BZnRlciIsImhhc09uQWZ0ZXIiLCJxdWVyeUV4ZWN1dG9yIiwiaGFzUXVlcnlFeGVjdXRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7SUFFcUJBLGlCOzs7QUFFbkIsNkJBQVlDLElBQVosRUFBa0JDLEdBQWxCLEVBQXVCO0FBQUE7O0FBQUEsK0RBQ3JCLGlDQUFNRCxJQUFOLEVBQVlDLEdBQVosQ0FEcUI7O0FBR3JCLFVBQUtDLFFBQUwsR0FBZ0JELElBQUlDLFFBQXBCO0FBQ0EsVUFBS0MsZ0JBQUwsR0FBd0IsTUFBS0QsUUFBTCxDQUFjQyxnQkFBdEM7QUFKcUI7QUFLdEI7OzhCQUVEQyxFLGVBQUdDLGMsRUFBZ0I7QUFDakIsV0FBTyxnQ0FBTUQsRUFBTixZQUFTQyxjQUFULEtBQTRCLEtBQUtILFFBQUwsQ0FBY0UsRUFBZCxDQUFpQkMsY0FBakIsQ0FBbkM7QUFDRCxHOzs4QkFFREMsSSxpQkFBS0MsTyxFQUFTQyxJLEVBQU07QUFDbEIsV0FBTyxLQUFLTixRQUFMLENBQWNJLElBQWQsQ0FB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QUFTO0FBQ3JCLFdBQU8sS0FBS0wsUUFBTCxDQUFjMEIsYUFBZCxDQUE0QnJCLE9BQTVCLENBQVA7QUFDRCxHOzs4QkFFRHNCLGdCLCtCQUFtQjtBQUNqQixXQUFPLEtBQUtELGFBQUwsS0FBdUI3QixrQkFBa0JhLFNBQWxCLENBQTRCZ0IsYUFBbkQsSUFBb0UsS0FBSzFCLFFBQUwsQ0FBYzJCLGdCQUFkLEVBQTNFO0FBQ0QsRzs7Ozs7a0JBdkZrQjlCLGlCIiwiZmlsZSI6IkRlbGVnYXRlT3BlcmF0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFF1ZXJ5QnVpbGRlck9wZXJhdGlvbiBmcm9tICcuL1F1ZXJ5QnVpbGRlck9wZXJhdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlbGVnYXRlT3BlcmF0aW9uIGV4dGVuZHMgUXVlcnlCdWlsZGVyT3BlcmF0aW9uIHtcblxuICBjb25zdHJ1Y3RvcihuYW1lLCBvcHQpIHtcbiAgICBzdXBlcihuYW1lLCBvcHQpO1xuXG4gICAgdGhpcy5kZWxlZ2F0ZSA9IG9wdC5kZWxlZ2F0ZTtcbiAgICB0aGlzLmlzV3JpdGVPcGVyYXRpb24gPSB0aGlzLmRlbGVnYXRlLmlzV3JpdGVPcGVyYXRpb247XG4gIH1cblxuICBpcyhPcGVyYXRpb25DbGFzcykge1xuICAgIHJldHVybiBzdXBlci5pcyhPcGVyYXRpb25DbGFzcykgfHwgdGhpcy5kZWxlZ2F0ZS5pcyhPcGVyYXRpb25DbGFzcyk7XG4gIH1cblxuICBjYWxsKGJ1aWxkZXIsIGFyZ3MpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5jYWxsKGJ1aWxkZXIsIGFyZ3MpO1xuICB9XG5cbiAgb25CZWZvcmUoYnVpbGRlciwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUub25CZWZvcmUoYnVpbGRlciwgcmVzdWx0KTtcbiAgfVxuXG4gIGhhc09uQmVmb3JlKCkge1xuICAgIHJldHVybiB0aGlzLm9uQmVmb3JlICE9PSBEZWxlZ2F0ZU9wZXJhdGlvbi5wcm90b3R5cGUub25CZWZvcmUgfHwgdGhpcy5kZWxlZ2F0ZS5oYXNPbkJlZm9yZSgpO1xuICB9XG5cbiAgb25CZWZvcmVJbnRlcm5hbChidWlsZGVyLCByZXN1bHQpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5vbkJlZm9yZUludGVybmFsKGJ1aWxkZXIsIHJlc3VsdCk7XG4gIH1cblxuICBoYXNPbkJlZm9yZUludGVybmFsKCkge1xuICAgIHJldHVybiB0aGlzLm9uQmVmb3JlSW50ZXJuYWwgIT09IERlbGVnYXRlT3BlcmF0aW9uLnByb3RvdHlwZS5vbkJlZm9yZUludGVybmFsIHx8IHRoaXMuZGVsZWdhdGUuaGFzT25CZWZvcmVJbnRlcm5hbCgpO1xuICB9XG5cbiAgb25CZWZvcmVCdWlsZChidWlsZGVyKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUub25CZWZvcmVCdWlsZChidWlsZGVyKTtcbiAgfVxuXG4gIGhhc09uQmVmb3JlQnVpbGQoKSB7XG4gICAgcmV0dXJuIHRoaXMub25CZWZvcmVCdWlsZCAhPT0gRGVsZWdhdGVPcGVyYXRpb24ucHJvdG90eXBlLm9uQmVmb3JlQnVpbGQgfHwgdGhpcy5kZWxlZ2F0ZS5oYXNPbkJlZm9yZUJ1aWxkKCk7XG4gIH1cblxuICBvbkJ1aWxkKGtuZXhCdWlsZGVyLCBidWlsZGVyKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUub25CdWlsZChrbmV4QnVpbGRlciwgYnVpbGRlcik7XG4gIH1cblxuICBoYXNPbkJ1aWxkKCkge1xuICAgIHJldHVybiB0aGlzLm9uQnVpbGQgIT09IERlbGVnYXRlT3BlcmF0aW9uLnByb3RvdHlwZS5vbkJ1aWxkIHx8IHRoaXMuZGVsZWdhdGUuaGFzT25CdWlsZCgpO1xuICB9XG5cbiAgb25SYXdSZXN1bHQoYnVpbGRlciwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUub25SYXdSZXN1bHQoYnVpbGRlciwgcmVzdWx0KTtcbiAgfVxuXG4gIGhhc09uUmF3UmVzdWx0KCkge1xuICAgIHJldHVybiB0aGlzLm9uUmF3UmVzdWx0ICE9PSBEZWxlZ2F0ZU9wZXJhdGlvbi5wcm90b3R5cGUub25SYXdSZXN1bHQgfHwgdGhpcy5kZWxlZ2F0ZS5oYXNPblJhd1Jlc3VsdCgpO1xuICB9XG5cbiAgb25BZnRlclF1ZXJ5KGJ1aWxkZXIsIHJlc3VsdCkge1xuICAgIHJldHVybiB0aGlzLmRlbGVnYXRlLm9uQWZ0ZXJRdWVyeShidWlsZGVyLCByZXN1bHQpO1xuICB9XG5cbiAgaGFzT25BZnRlclF1ZXJ5KCkge1xuICAgIHJldHVybiB0aGlzLm9uQWZ0ZXJRdWVyeSAhPT0gRGVsZWdhdGVPcGVyYXRpb24ucHJvdG90eXBlLm9uQWZ0ZXJRdWVyeSB8fCB0aGlzLmRlbGVnYXRlLmhhc09uQWZ0ZXJRdWVyeSgpO1xuICB9XG5cbiAgb25BZnRlckludGVybmFsKGJ1aWxkZXIsIHJlc3VsdCkge1xuICAgIHJldHVybiB0aGlzLmRlbGVnYXRlLm9uQWZ0ZXJJbnRlcm5hbChidWlsZGVyLCByZXN1bHQpO1xuICB9XG5cbiAgaGFzT25BZnRlckludGVybmFsKCkge1xuICAgIHJldHVybiB0aGlzLm9uQWZ0ZXJJbnRlcm5hbCAhPT0gRGVsZWdhdGVPcGVyYXRpb24ucHJvdG90eXBlLm9uQWZ0ZXJJbnRlcm5hbCB8fCB0aGlzLmRlbGVnYXRlLmhhc09uQWZ0ZXJJbnRlcm5hbCgpO1xuICB9XG5cbiAgb25BZnRlcihidWlsZGVyLCByZXN1bHQpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5vbkFmdGVyKGJ1aWxkZXIsIHJlc3VsdCk7XG4gIH1cblxuICBoYXNPbkFmdGVyKCkge1xuICAgIHJldHVybiB0aGlzLm9uQWZ0ZXIgIT09IERlbGVnYXRlT3BlcmF0aW9uLnByb3RvdHlwZS5vbkFmdGVyIHx8IHRoaXMuZGVsZWdhdGUuaGFzT25BZnRlcigpO1xuICB9XG5cbiAgcXVlcnlFeGVjdXRvcihidWlsZGVyKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUucXVlcnlFeGVjdXRvcihidWlsZGVyKTtcbiAgfVxuXG4gIGhhc1F1ZXJ5RXhlY3V0b3IoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlFeGVjdXRvciAhPT0gRGVsZWdhdGVPcGVyYXRpb24ucHJvdG90eXBlLnF1ZXJ5RXhlY3V0b3IgfHwgdGhpcy5kZWxlZ2F0ZS5oYXNRdWVyeUV4ZWN1dG9yKCk7XG4gIH1cbn0iXX0=